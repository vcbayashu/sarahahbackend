1. Make sure you have an account on a deployment platform (e.g. Heroku,Render,AWS, DO etc). We will be using Render for our use case.
2. Make you have a working MongodB Atlas cluster which connects successfuly to your server.
3. Make sure your both repositories (frontend/backend) are pushed on GITHUB.
4. Make sure your PORT number is dynamic i.e. (const port = process.env.PORT || 5000;)
5. Make sure your MongodB URL is not hard coded but placed inside ENV file.
6. Make sure you have a .gitignore file which have mentioned node_modules and .env file.
7. Please note that only backend repository is used for deployment purposes on the deployment platform (render, heroku, DO etc) in such a way
   that a build file from frontend (npm run build) is placed inside backend client/ folder.
   whose code is 
    app.use(express.static('client/build'))
    app.get('*', (req, res) => {
        res.sendFile(
            path.resolve(__dirname + '/../client/build/index.html'),
            function (err) {
                if (err) {
                    console.log(err)
                }
            }
        )
    })
8. Make sure you have "start" script defined in your package.json file.
9. Thats'all now you push this code to backend repository and connect on Render and deploy. 
10. Make sure your ENVs are defined properly on deployment platform

Tip: Please check if your Web app is running properly at your local backend port number before deployment
